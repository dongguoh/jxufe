/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.gjx.struts.action;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.gjx.jxufe.factory.Factory;
import com.gjx.jxufe.vo.Link;
import com.gjx.struts.form.LinkForm;
import com.gjx.util.Constants;


public class LinkAction extends DispatchAction {
	private static final Log logger = LogFactory.getLog(LinkAction.class);

	public ActionForward read(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub

		List list = Factory.getLinkTypeDaoImpl().getLinkTypeList();
		request.setAttribute(Constants.LINK_TYPE_LIST, list);
		list = Factory.getLinkDaoImpl().getLinkList();
		request.setAttribute(Constants.LINK_LIST, list);
		logger.info("已经读取链接信息");
		return mapping.findForward(Constants.SUCCESS_KEY);

	}

	public ActionForward insert(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		LinkForm lf = (LinkForm) form;
		Link link = new Link();
		link.setName(lf.getName());
		link.setImage(lf.getImage());
		link.setTypeid(lf.getTypeid());
		link.setUrl(lf.getUrl());

		logger.info("已经取得一个LINK");
		Factory.getLinkDaoImpl().insertLink(link);

		List list = Factory.getLinkDaoImpl().getLinkList();

		request.setAttribute(Constants.LINK_LIST, list);
		list = Factory.getLinkTypeDaoImpl().getLinkTypeList();
		request.setAttribute(Constants.LINK_TYPE_LIST, list);

		return mapping.findForward(Constants.SUCCESS_KEY);
	}

	public ActionForward delete(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		int id = Integer.parseInt(request.getParameter("id"));
		Factory.getLinkDaoImpl().deleteLink(id);
		List list = Factory.getLinkDaoImpl().getLinkList();
		request.setAttribute(Constants.LINK_LIST, list);
		list = Factory.getLinkTypeDaoImpl().getLinkTypeList();
		request.setAttribute(Constants.LINK_TYPE_LIST, list);
		logger.info("删除一条链接记录成功" + id);
		return mapping.findForward(Constants.SUCCESS_KEY);
	}

	// 更新
	public ActionForward update(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {

		int id = Integer.parseInt(request.getParameter("id"));
		LinkForm lf = (LinkForm) form;
		Link lk =Factory.getLinkDaoImpl().getLink(id);
		lk.setName(lf.getName());
		lk.setImage(lf.getImage());
		lk.setTypeid(lf.getTypeid());
		lk.setUrl(lf.getUrl());
		Factory.getLinkDaoImpl().updateLink(lk);
		//Link link = Factory.getLinkDaoImpl().getLink(id);

		logger.info("更新link名称为：" + lk.getName());
		
		List list = Factory.getLinkDaoImpl().getLinkList();
		request.setAttribute(Constants.LINK_LIST, list);
		list = Factory.getLinkTypeDaoImpl().getLinkTypeList();
		request.setAttribute(Constants.LINK_TYPE_LIST, list);
		return mapping.findForward(Constants.SUCCESS_KEY);
	}

	// 取得一个linK
	public ActionForward getLink(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		int id = Integer.parseInt(request.getParameter("id"));
		logger.info("找到要更改的Link的ID:" + id);
		Link link = Factory.getLinkDaoImpl().getLink(id);
		List list = Factory.getLinkDaoImpl().getLinkList();
		request.setAttribute(Constants.LINK_LIST, list);
		list = Factory.getLinkTypeDaoImpl().getLinkTypeList();
		request.setAttribute(Constants.LINK_TYPE_LIST, list);
		request.setAttribute("link", link);
		return mapping.findForward(Constants.SUCCESS_KEY);
	}
}