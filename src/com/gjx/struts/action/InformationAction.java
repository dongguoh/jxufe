/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.gjx.struts.action;

import java.io.File;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.gjx.jxufe.factory.Factory;
import com.gjx.jxufe.vo.Information;
import com.gjx.jxufe.vo.InformationType;
import com.gjx.struts.form.InformationForm;
import com.gjx.util.Constants;

public class InformationAction extends DispatchAction {
	private static final Log logger = LogFactory
			.getLog(InformationAction.class);

	Information inf = null;

	// 添加 一条信息
	public ActionForward insert(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		InformationForm infm = (InformationForm) form;
		String filePath = (String) request.getSession().getAttribute(
				Constants.UPLOAD_PATH);
		infm.setFile(filePath);
		request.getSession().removeAttribute(Constants.UPLOAD_PATH);
		List list = null;
		inf = new Information();
		this.setInformation(infm);
		Factory.getInfromationDaoImple().insertInformation(inf);
		logger.info("****** 插入信息成功>>>>" + inf.getTitle());
		list = Factory.getInfromationDaoImple().getInformationList(request, 1,
				Constants.INFORMATION_PAGE_LENGTH, inf.getClassify());
		request.setAttribute(Constants.INFORMATION_LIST, list);
		InformationType informationType = Factory.getInformationTypeDaoImpl()
				.getInformationType(inf.getClassify());
		request.setAttribute(Constants.INFORMATION_TYPE, informationType);
		return mapping.findForward(Constants.INFORMATION_LIST);

	}

	// 根据ID更新信息
	public ActionForward update(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		InformationForm inff = (InformationForm) form;
		String id = request.getParameter("id");
		inf = Factory.getInfromationDaoImple().getInformation(
				Integer.parseInt(id));
		if (inf != null) {
			String filePath = (String) request.getSession().getAttribute(
					Constants.UPLOAD_PATH);
			inff.setFile(filePath);
			request.getSession().removeAttribute(Constants.UPLOAD_PATH);

			this.setInformation(inff);
			Factory.getInfromationDaoImple().updateInformation(inf);
			logger.info("*******   更新信息成功 id=" + inf.getId()
					+ "    *****title=" + inf.getTitle());
			List list = Factory.getInfromationDaoImple().getInformationList(
					request, 1, Constants.INFORMATION_PAGE_LENGTH,
					inf.getClassify());
			request.setAttribute(Constants.INFORMATION_LIST, list);
			InformationType informationType = Factory
			.getInformationTypeDaoImpl().getInformationType(
					inf.getClassify());
	request.setAttribute(Constants.INFORMATION_TYPE, informationType);
			return mapping.findForward(Constants.INFORMATION_LIST);

		}

		return mapping.getInputForward();

	}

	// 删除一条信息
	public ActionForward delete(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		String id = request.getParameter("id");
		String pageNum = request.getParameter("pageNum");
		Object admin = request.getSession().getAttribute(Constants.ADMIN_KEY);
		if (id != null && (null != admin)) {

			inf = Factory.getInfromationDaoImple().getInformation(
					Integer.parseInt(id));
			// 删除数据库信息
			Factory.getInfromationDaoImple().deleteInformation(
					Integer.parseInt(id));
			// 删除文件
			String path = servlet.getServletContext().getRealPath("/");
			String filePath = path + inf.getFile();
			File file = new File(filePath);
			if (file.isFile() && file.exists()) {
				if (file.delete()) {
					logger.info("文件删除成功,文件名为:" + inf.getFile() + ">"
							+ this.getClass());
				}
			}
			List list = Factory.getInfromationDaoImple().getInformationList(
					request, Integer.parseInt(pageNum),
					Constants.INFORMATION_PAGE_LENGTH, inf.getClassify());
			request.setAttribute(Constants.INFORMATION_LIST, list);
			InformationType informationType = Factory
					.getInformationTypeDaoImpl().getInformationType(
							inf.getClassify());
			request.setAttribute(Constants.INFORMATION_TYPE, informationType);
			return mapping.findForward(Constants.INFORMATION_LIST);

		}
		return mapping.findForward(Constants.FAILURE_KEY);
	}

	// 读取信息列表 classify 为1时为公告的 ，为2时为新闻的
	public ActionForward read(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		String strPageNum = request.getParameter("pageNum");
		String strClassify = request.getParameter("classify");
		int pageNum = 0;
		int classify = 1;
		if (null != strPageNum && !"".equals(strPageNum)) {
			try {
				pageNum = Integer.parseInt(strPageNum);
			} catch (NumberFormatException nfe) {
				pageNum = 0;
			}
		}
		if (null != strClassify && !"".equals(strClassify)) {
			try {
				classify = Integer.parseInt(strClassify);
			} catch (NumberFormatException nfe) {
				classify = 1;
			}

		}
		List list = Factory.getInfromationDaoImple().getInformationList(
				request, pageNum, Constants.INFORMATION_PAGE_LENGTH, classify);
		request.setAttribute(Constants.INFORMATION_LIST, list);
		InformationType informationType = Factory.getInformationTypeDaoImpl()
				.getInformationType(classify);
		request.setAttribute(Constants.INFORMATION_TYPE, informationType);
		return mapping.findForward(Constants.INFORMATION_LIST);

	}

	// 根据ID取得一条将要修改的信息
	public ActionForward getInformation(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {

		// TODO Auto-generated method stub
		String id = request.getParameter("id");
		Information inf = Factory.getInfromationDaoImple().getInformation(
				Integer.parseInt(id));
		request.setAttribute(Constants.INFORMATION_KEY, inf);

		return mapping.findForward("update");

	}

	private void setInformation(InformationForm infm) {
		inf.setTitle(infm.getTitle());
		inf.setContent(infm.getContent());
		inf.setIssue(infm.getIssue());
		inf.setClassify(infm.getClassify());
		inf.setFile(infm.getFile());
	}
}